---
import Button from "./Button.astro"
import DobleArrow from "@icons/DobleArrow.astro"
import Check from "@icons/Check.astro"
import { getLangFromUrl } from "@i18n/utils.ts"

const selectedLang = getLangFromUrl(Astro.url)
---

<div id="langwrapper">
  <Button id="langbutton">
    <span class="leading-none py-1 px-0">{selectedLang.toUpperCase()}</span>
    <!-- <DobleArrow /> -->
     <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 256 256"><path d="M247.15,212.42l-56-112a8,8,0,0,0-14.31,0l-21.71,43.43A88,88,0,0,1,108,126.93,103.65,103.65,0,0,0,135.69,64H160a8,8,0,0,0,0-16H104V32a8,8,0,0,0-16,0V48H32a8,8,0,0,0,0,16h87.63A87.76,87.76,0,0,1,96,116.35a87.74,87.74,0,0,1-19-31,8,8,0,1,0-15.08,5.34A103.63,103.63,0,0,0,84,127a87.55,87.55,0,0,1-52,17,8,8,0,0,0,0,16,103.46,103.46,0,0,0,64-22.08,104.18,104.18,0,0,0,51.44,21.31l-26.6,53.19a8,8,0,0,0,14.31,7.16L148.94,192h70.11l13.79,27.58A8,8,0,0,0,240,224a8,8,0,0,0,7.15-11.58ZM156.94,176,184,121.89,211.05,176Z"></path></svg>
  </Button>
  <dialog id="langdialog">
    <div
      id="langcontent"
      class="bg-white border border-zinc-border rounded-md text-black top-0"
    >
      <a
        href="/en"
        class="flex items-center gap-2 px-3 py-2 hover:bg-black/5 cursor-pointer"
      >
        <span>EN</span>
        {selectedLang === "en" && <Check />}
      </a>
      <a
        href="/es"
        class="flex items-center gap-2 px-3 py-2 hover:bg-black/5 cursor-pointer"
      >
        <span>ES</span>
        {selectedLang === "es" && <Check />}
      </a>
    </div>
  </dialog>
</div>
<style>
  #langdialog {
    background-color: transparent;
    margin: 0;
    position: absolute;
  }

  #langdialog::backdrop {
    background-color: transparent;
  }
</style>

<script>
  const $button = document.getElementById("langbutton")
  const $content = document.getElementById("langcontent") as HTMLDivElement
  const $header = document.getElementById("header") as HTMLDivElement
  const $wrapper = document.getElementById("langwrapper") as HTMLDivElement
  const $dialog = document.getElementById("langdialog") as HTMLDialogElement

  $button?.addEventListener("click", () => {
    const scroll = window.scrollY
    $dialog.showModal()
    
    // Obtener la posici칩n exacta del bot칩n
    const buttonRect = $button.getBoundingClientRect()
    const contentWidth = $content.offsetWidth
    const buttonWidth = $button.offsetWidth
    
    // Centrar el di치logo respecto al bot칩n
    $dialog.style.left = 
      buttonRect.left + (buttonWidth - contentWidth) / 2 + "px"
    $dialog.style.top =
      buttonRect.bottom + scroll + 8 + "px"
    
    window.scrollTo({ top: scroll })
  })

  window.addEventListener("scroll", e => {
    if ($dialog.open) {
      const buttonRect = $button?.getBoundingClientRect()
      $dialog.style.top = (buttonRect?.bottom ?? "0") + String((window.scrollY + 8)) + "px"
    }
  })

  $dialog.addEventListener("click", () => $dialog.close())
  $content.addEventListener("click", event => event.stopPropagation())
</script>
